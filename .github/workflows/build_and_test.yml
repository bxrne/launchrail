name: Build, Test, and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: [1.23]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential

    - name: Build
      run: |
        go mod download -x
        make build

    - name: Run tests
      run: |
        make test

    - name: Upload build artifacts
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-build
        path: build/

    - name: Upload coverage report
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage.out

  release:
    needs: build_and_test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.23

    - name: Bump version and create tag
      id: bump_version
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git fetch --tags
        latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
        echo "Latest tag: $latest_tag"
        if [ -z "$latest_tag" ]; then
          new_tag="v0.1.0"
        else
          new_tag=$(echo $latest_tag | awk -F. -v OFS=. '{$NF++;print}')
        fi
        echo "New tag: $new_tag"
        git tag $new_tag
        git push origin $new_tag
        echo "::set-output name=tag::$new_tag"

    - name: Create GitHub Release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ steps.bump_version.outputs.tag }}
        release_name: Release ${{ steps.bump_version.outputs.tag }}
        body: |
          Changes in this release:
          - Description of changes
        draft: false
        prerelease: false

